name: AppImage build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
        fetch-depth: 0

    - name: Update packages
      run: sudo apt-get update

    - name: Install packages
      run: sudo apt-get install --fix-missing cmake ninja-build libxcb-keysyms1 libxcb-keysyms1-dev libxi6 libxi-dev alsa-oss osspd-alsa osspd libasound2 libasound2-dev p7zip p7zip-full libgl1-mesa-dev libxcb-glx0-dev libx11-xcb-dev

    - name: Install LLVM
      run: . cmake/linux_actions/install_llvm.sh

    - name: Install Libsodium
      run: . cmake/linux_actions/install_libsodium.sh

    - name: Generate CMake files
      run: . cmake/linux_actions/generate_cmake_files.sh

    - name: Build
      run: pushd build/current && ninja tests -k 0 && popd

    - name: Build AppImage
      run: cmake/appimage_builder.sh

    - uses: actions/upload-artifact@v3
      with:
        name: Linux-AppImage
        path: |
          Hypersomnia.AppImage
